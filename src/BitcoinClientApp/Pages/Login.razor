@page "/login"
@using BitcoinClientApp.Models
@using BitcoinClientApp.Services
@using System.ComponentModel.DataAnnotations
@inject AuthService AuthService
@inject NavigationManager NavigationManager
@inject CustomAuthStateProvider AuthStateProvider

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-header">
                    <h3 class="text-center">Login</h3>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger" role="alert">
                            @errorMessage
                        </div>
                    }
                    
                    <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group mb-3">
                            <label for="username">Username</label>
                            <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                            <ValidationMessage For="@(() => loginModel.Username)" />
                        </div>

                        <div class="form-group mb-3">
                            <label for="password">Password</label>
                            <InputText type="password" id="password" class="form-control" @bind-Value="loginModel.Password" />
                            <ValidationMessage For="@(() => loginModel.Password)" />
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Login</button>
                        </div>
                    </EditForm>

                    <div class="text-center mt-3">
                        <a href="/register">Don't have an account? Register here</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private BitcoinClientApp.Models.Login loginModel = new();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        if (await AuthService.ValidateUserAsync(loginModel.Username, loginModel.Password))
        {
            // Update authentication state
            AuthStateProvider.NotifyUserLogin(loginModel.Username);
            
            // Navigate to dashboard
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = "Invalid username or password";
        }
    }
} 